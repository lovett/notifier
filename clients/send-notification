#!/bin/sh

#
# Send messages to notifier from the command line via curl.
#
# Includes the ability to request a login token from a notifier and
# save it to ~/.netrc.
#

set -u

usage() {
    cat <<EOF

This script sends a message populated with the specified fields to a
notifier server via curl.

If a server is not specified, the NOTIFIER_SERVER environment variable
is used.

To set up authentication:
${0##*/} -a


To send a message after setting up authentication:
${0##*/} -s SERVER -t TITLE -g GROUP -b BODY -u URL
-p PUSHBULLET_ID

EOF
}

authorize() {
    echo "Setting up access credentials."

    read -p "Enter the full URL of your notifier server: " NOTIFIER_URL

    NOTIFIER_HOST_AND_PORT=${NOTIFIER_URL##*\/\/}
    NOTIFIER_HOST=${NOTIFIER_HOST_AND_PORT%%:*}

    read -p "Username: " NOTIFIER_USERNAME

    stty -echo
    read -p "Password: " NOTIFIER_PASSWORD
    stty echo

    echo ""
    echo ""

    RESPONSE=$(curl -s \
                    --write-out ",%{http_code}" \
                    -d "username=$NOTIFIER_USERNAME" \
                    -d "password=$NOTIFIER_PASSWORD" \
                    -d "label=${0##*/}" \
                    -d "persist=1" \
                    $NOTIFIER_URL/auth)

    RESPONSE_CODE=${RESPONSE##*,}

    if [ "$RESPONSE_CODE" != "200" ]; then
        echo "Could not log in. Server returned $RESPONSE_CODE" >&2
        exit;
    fi

    RESPONSE_USER=$(echo "$RESPONSE" | cut -d "," -f 1)
    RESPONSE_PASS=$(echo "$RESPONSE" | cut -d "," -f 2)

    NETRC=$HOME/.netrc
    if [ -f $NETRC ]; then
        NETRC_TMP=$NETRC.tmp-${0##*/}
        sed "/$NOTIFIER_HOST/d" $NETRC > $NETRC_TMP
        mv $NETRC_TMP $NETRC
    fi

    echo "machine $NOTIFIER_HOST login $RESPONSE_USER password $RESPONSE_PASS" >> $NETRC
    echo "Credentials for $NOTIFIER_HOST have been saved in $NETRC"
}

# Are we running from cron?
if [ -t 0 ]; then
    INTERACTIVE=1
else
    INTERACTIVE=0
fi

OPTIND=1
TITLE=""
GROUP=""
BODY=""
URL=""
PUSHBULLET_ID=""
LOCAL_ID=""
SERVER=${NOTIFIER_SERVER:-}
ENDPOINT="message"

while getopts "ahcp:s:t:g:b:u:l:" opt; do
    case "$opt" in
        a)
            authorize
            exit
            ;;
        s)
            SERVER="$OPTARG"
            ;;
        t)
            TITLE="$OPTARG"
            ;;
        g)
            GROUP="$OPTARG"
            ;;
        b)
            BODY="$OPTARG"
            ;;
        u)
            URL="$OPTARG"
            ;;
        p)
            PUSHBULLET_ID="$OPTARG"
            ;;
        l)
            LOCAL_ID="$OPTARG"
            ;;
        c)
            ENDPOINT="$ENDPOINT/clear"
            ;;
        ?)
            usage  >&2
            exit 2
            ;;
    esac
done
shift "$((OPTIND-1))"

if [ -z "$SERVER" ]; then
    echo "ERROR: No server specified." >&2
    echo "Run with -a to set up authentication credentials" >&2
    echo "Run with -h for usage details" >&2
    exit 2
fi

HTTP_CODE="000"
RETRYING=0
while [ "$HTTP_CODE" != "204" ]; do
    MESSAGE=""
    CURL_OUT=$(curl --netrc --fail --silent --show-error \
                    --write-out ",%{http_code}" \
                    --retry 20 \
                    -d "title=$TITLE" \
                    -d "group=$GROUP" \
                    -d "body=$BODY" \
                    -d "url=$URL"  \
                    -d "pushbulletId=$PUSHBULLET_ID" \
                    -d "localId=$LOCAL_ID" \
                    "$SERVER/$ENDPOINT" 2>&1 )
    HTTP_CODE=${CURL_OUT##*,}

    if [ "$?" != "0" ] && [ $RETRYING -eq 0 ]; then
        MESSAGE="Curl exited with $?"
    elif [ "$HTTP_CODE" != "204" ] && [ $RETRYING -eq 0 ]; then
        MESSAGE="Curl request failed"
    fi

    if [ ! -z "$MESSAGE" ]; then
        MESSAGE="$MESSAGE. Will keep trying until successful."
        if [ $INTERACTIVE -eq 1 ]; then
            echo "â˜¹  $MESSAGE"
        else
            logger -t "${0##*/}" "$MESSAGE"
        fi
        RETRYING=1
        sleep 10
    fi
done

if [ $RETRYING -eq 1 ]; then
    if [ $INTERACTIVE -eq 1 ]; then
        echo "ðŸ‘Œ  Success."
    else
        logger -t "${0##*/}" "Success."
    fi
fi
