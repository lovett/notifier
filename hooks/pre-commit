#!/usr/bin/env bash

set -eu

WORK_DIR=$(mktemp -p . -d)

cleanup() {
    rm -rf "$WORK_DIR"
}

LINT_TS=0

echo "Runing pre-commit hook..."

# Copy staged files to the work directory.
#
# This ensures the files being checked are the files being committed.
git checkout-index --prefix="$WORK_DIR/" -af


# Walk through the staged files and lint the copies in the work
# directory.  The filter argument excludes deleted, copied, and
# renamed files.
for STAGED_FILE in $(git diff --cached --name-only --diff-filter=dcr); do
    FILE_EXTENSION="${STAGED_FILE##*.}"

    # JSON
    if [[ "$FILE_EXTENSION" == "json" ]]; then
        node "$WORK_DIR/$STAGED_FILE"
    fi

    # Less
    if [[ "$FILE_EXTENSION" == "less" ]]; then
        node_modules/.bin/stylelint "$WORK_DIR/$STAGED_FILE"
    fi

    # Typescript
    if [[ "$FILE_EXTENSION" == "ts" ]]; then
        LINT_TS=1
    fi
done

if [ "$LINT_TS" = 1 ]; then
	tsc --noEmit -p "$WORK_DIR/server"
	eslint "$WORK_DIR/server" --ext .ts

	tsc --noEmit -p "$WORK_DIR/ui"
	eslint "$WORK_DIR/ui" --ext .ts
fi

trap "cleanup" EXIT
