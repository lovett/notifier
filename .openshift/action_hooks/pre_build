#!/bin/bash

#
# Install a custom version of node and npm. Then install application
# dependencies.
#
# This is the first hook of the OpenShift build lifecycle, and runs
# while the application is stopped.
# https://developers.openshift.com/en/managing-action-hooks.html
#
# Note that OpenShift environment variables have a trailing slash.
#

echo "Starting pre_build hook"

START=$(date +'%s')
ARCH="linux-x64"
WANTED_NODE_VERSION=$NOTIFIER_NODE_VERSION;
INSTALLED_NODE_VERSION=$(node --version)
ARCHIVE="node-${NODE_VERSION}-${ARCH}.tar.gz"
DOWNLOAD_URL="http://nodejs.org/dist/$NODE_VERSION/$ARCHIVE"
DESTINATION="${OPENSHIFT_DATA_DIR}${ARCHIVE}"
NODE_DIR=${ARCHIVE%.tar.gz}

if [[ "$WANTED_NODE_VERSION" != "$INSTALLED_NODE_VERSION" ]]; then
    echo "Downloading $DOWNLOAD_URL"
    curl -s -L -o "$DESTINATION" "$DOWNLOAD_URL"
    tar -x -z -C "$OPENSHIFT_DATA_DIR" -f "$DESTINATION"
        
    mkdir -p "${HOME}/.node_modules/.bin"
        
    ln -sf "${OPENSHIFT_DATA_DIR}${NODE_DIR}/bin/node" "${HOME}/.node_modules/.bin/"
    ln -sf "${OPENSHIFT_DATA_DIR}${NODE_DIR}/bin/npm" "${HOME}/.node_modules/.bin/"
fi

# Install application dependencies
cd $OPENSHIFT_REPO_DIR
$HOME/.node_modules/.bin/npm install --production
$HOME/.node_modules/.bin/npm prune --production

# Temporarily moving package.json prevents the default
# Openshift build hook from running, which runs
# npm install using the system version of nodejs.
#
# The build hook will put package.json back in place.
if [[ -f "package.json" ]]; then
    mv  "package.json" "package.json.bak"
fi

DURATION=$(($(date +'%s') - START))

echo "Finished pre_build hook in $DURATION seconds"
