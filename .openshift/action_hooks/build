#!/usr/bin/env node

/**
 * Populate the file env.json with modified values derived from
 * OpenShift environment variables
 *
 * This hook runs after pre_build while the application is stopped.
 * See https://developers.openshift.com/en/managing-action-hooks.html
 *
 * Note that OpenShift environment variables have a trailing slash.
 */

var fs = require('fs');
var childProcess = require('child_process');

var start = new Date();

console.log('Starting build hook');

var appEnv = {};

appEnv.NOTIFIER_LOG = process.env.OPENSHIFT_LOG_DIR + 'notifier.log';
appEnv.NOTIFIER_LOG_LEVEL = 'info';
appEnv.NOTIFIER_HTTP_IP = process.env.OPENSHIFT_NODEJS_IP;
appEnv.NOTIFIER_HTTP_PORT = process.env.OPENSHIFT_NODEJS_PORT;
appEnv.NOTIFIER_WEBSOCKET_PORT = '8443';
appEnv.NOTIFIER_FORCE_HTTPS = 'true';
appEnv.NOTIFIER_DB = 'openshift';

appEnv.ONEDRIVE_AUTH_FILE = process.env.OPENSHIFT_DATA_DIR + 'onedrive.json';

// Login credentials are intentionally omitted. They will be populated
// from server.js
appEnv.NOTIFIER_DB_CONFIG = {
    "openshift": {
        "sequelize": {
            "host": process.env.OPENSHIFT_MYSQL_DB_HOST,
            "port": process.env.OPENSHIFT_MYSQL_DB_PORT,
            "dialect": "mysql"
        }
    }
}

var appEnvString = JSON.stringify(appEnv, null, 2);

fs.writeFile(process.env.OPENSHIFT_REPO_DIR + 'env.json', appEnvString, function (err) {
    if (err) {
        console.log(err);
    }

    fs.rename(process.env.OPENSHIFT_REPO_DIR + 'package.json.bak', process.env.OPENSHIFT_REPO_DIR + 'package.json', function (err) {
        if (err) {
            console.log(err);
            process.exit(1);
        }
        
        var buildStdOutBuffer = childProcess.execSync('npm run-script build', {
            cwd: process.env.OPENSHIFT_REPO_DIR
        });

        console.log(buildStdOutBuffer.toString('utf-8'));

        var duration = new Date().getTime() - start.getTime();
        duration /= 1000;
        
        console.log('Finished build hook in ' + Math.ceil(duration) + ' seconds');
    });
});

