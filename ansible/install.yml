---
- hosts: notifier
  vars:
    application_user: notifier
    application_group: notifier
    installation_directory: /srv/notifier
    nodejs_path: /usr/local/bin/node
  tasks:
  - name: Create the application user
    become: true
    user:
      state=present
      groups=""
      name="{{ application_user }}"
      createhome=no
      home="{{ installation_directory }}"
      shell="/usr/sbin/nologin"
      system=yes

  - name: Rsync the application
    become: true
    synchronize:
      src: "../build/"
      dest: "{{ installation_directory }}"
      delete: yes
      recursive: true
      rsync_opts:
        - "--exclude=node_modules"
        - "--exclude=package.json"
        - "--exclude=package-lock.json"

  - name: Copy package.json
    become: true
    copy:
      src: "{{ item }}"
      dest: "{{ installation_directory }}"
    with_items:
      - ../package.json
      - ../package-lock.json

  - name: Install NPM packages
    become: true
    npm:
      executable: "/usr/local/bin/npm"
      global: no
      ignore_scripts: yes
      path: "{{ installation_directory }}"
      production: yes

  - name: Copy send-notification
    become: true
    copy:
      src: "{{ playbook_dir }}/../clients/send-notification"
      dest: "/usr/local/bin/send-notification"
      mode: 0755

  - name: Set permissions on application root
    become: true
    file:
      path: "{{ installation_directory }}"
      recurse: yes
      owner: "{{ application_user }}"
      group: "{{ application_group }}"

  - name: Populate the systemd service
    become: true
    template:
      src: "notifer.service.j2"
      dest: "/etc/systemd/system/notifier.service"

  - name: Enable systemd service
    become: true
    systemd:
      name: notifier
      enabled: yes
      masked: no
      daemon_reload: yes

  - name: Restart the server
    become: true
    systemd:
      name: notifier
      state: restarted

  - name: Wait for server to come up
    wait_for:
      host: 0.0.0.0
      port: 8080
      state: started

...
